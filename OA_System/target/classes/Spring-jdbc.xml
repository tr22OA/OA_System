<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
		
		
		<!-- 引入propeties文件 -->
		<context:property-placeholder location="classpath:db.properties"/>
		<!-- 配置数据源-->
		<!-- 配置dataSource代理 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
			<!-- 目标源，使用阿里的Druid连接池作为数据源 -->
			<property name="targetDataSource">
				<bean class="com.alibaba.druid.pool.DruidDataSource">
					<!-- 配置连接属性，url、username、password等 -->
					<property name="driverClassName" value="${driver}"/>
					<property name="url" value="${url}"/>
					<property name="username" value="${user}"/>
					<property name="password" value="${pass}"/>
					<property name="initialSize" value="${initialSize}"/>
					<property name="minIdle" value="${minIdle}"/>
					<property name="maxActive" value="${maxActive}"/>
					<property name="maxWait" value="${maxWait}"/>
				</bean>
			</property>
		</bean>
		
		
		<!-- 配置Mybatis框架配置-->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<!-- 指定Mybatis的配置文件位置 -->
			<property name="configLocation" value="classpath:Mybatis-Config.xml"/>
			<!-- 指定mapping.xml的文件位置 -->
			<property name="mapperLocations" value="classpath*:mapper/*.xml"/>
			<!-- 指定pojo包 ,取别名-->
			<property name="typeAliasesPackage" value="com.oa.pojos"/>
			
			<!-- Mybatis的分页插件 -->
			<property name="plugins">
				<array>
					<bean class="com.github.pagehelper.PageHelper">
						<property name="properties">
							<value>
								dialect=mysql
							</value>
						</property>
					</bean>
				</array>
			</property>
		</bean>
		
		
		
		
		
		<!-- Mybatis自动扫描dao -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
			<property name="basePackage" value="com.oa.dao.mybatis"/>
		</bean>
		
		
		
		<!-- JPA框架配置 -->
		<bean id="entityManagerFactory"
				class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
				<property name="dataSource" ref="dataSource"/>
		</bean>
		
		<!-- JPA自动扫描dao -->
		<jpa:repositories base-package="com.oa.dao.jpa"/>
		
		
		
		<!-- JPA事务 -->
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="entityManagerFactory"/>
		</bean>
		<!-- Mybatis事务 -->
		<bean id="transactionManager-mybatis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
		</bean>
		
		
		<!-- 开启事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		<tx:annotation-driven transaction-manager="transactionManager-mybatis"/>
		
</beans>
